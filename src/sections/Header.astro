---
import MenuButton from "@/components/MenuButton.astro"
import Link from "@/components/ui/Link.astro"
import Separator from "@/components/ui/Separator.astro"
import Code from "@/icons/phosphor/Code.astro"
import Footer from "@/sections/Footer.astro"

const links = [
  {
    label: "Experiencia",
    href: "/#experience",
  },
  {
    label: "Proyectos",
    href: "/#proyects",
  },
  {
    label: "Educación",
    href: "/#education",
  },
  {
    label: "Sobre mí",
    href: "/#about",
  },
]
---

<header class="sticky top-0 z-10">
  {/* eslint-disable-next-line tailwindcss/no-custom-classname */}
  <div class="transition-scroll">
    <div class="mx-auto flex max-w-5xl items-center justify-between gap-4 p-4 md:px-14">
      <Link
        aria-label="Ir a la página principal."
        class="typography-lg inline-flex items-center gap-2 font-semibold tracking-wide"
        href="/"
      >
        <Code class="size-8 shrink-0" />
        TheLokin
      </Link>
      <MenuButton aria-controls="menu" class="md:hidden" id="menu-trigger" state="closed" />
      <nav class="hidden md:block">
        <ul class="flex gap-4">
          {
            links.map((link) => (
              <li>
                <Link class="typography-lg font-semibold" href={link.href} variant="underline">
                  {link.label}
                </Link>
              </li>
            ))
          }
        </ul>
      </nav>
    </div>
  </div>
  <div
    class:list={[
      "invisible fixed inset-0 overflow-y-auto px-2 opacity-0 scrollbar-hide md:hidden",
      "transition-[visibility,opacity] duration-300 ease-in-out motion-reduce:transition-none",
      "data-open:visible data-open:opacity-100",
    ]}
    data-state="closed"
    id="menu"
  >
    <div class="flex items-center justify-between px-2 py-4">
      <span class="typography-lg font-semibold uppercase">Menú</span>
      <MenuButton aria-controls="menu" id="menu-close" state="open" />
    </div>
    <Separator />
    <nav>
      <ul class="flex flex-col gap-6 py-6" id="menu-anchors">
        {
          links.map((link) => (
            <li class="flex justify-center">
              <Link class="typography-lg font-semibold" href={link.href}>
                {link.label}
              </Link>
            </li>
          ))
        }
      </ul>
    </nav>
    <Separator />
    <Footer />
  </div>
</header>

<style>
  .transition-scroll {
    animation: shadow linear both;
    animation-timeline: scroll();
    animation-range-end: 1%;
  }

  @keyframes shadow {
    to {
      @apply shadow-sm;
      background: var(--background-image);
    }
  }

  #menu {
    background: var(--background-image);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const menuTrigger = document.getElementById("menu-trigger") as HTMLButtonElement
    const menuClose = document.getElementById("menu-close") as HTMLButtonElement
    const menu = document.getElementById("menu") as HTMLDivElement
    const menuAnchors = document.querySelectorAll("#menu-anchors a")
    const menuElements = Array.from(
      menu.querySelectorAll("button, a, input, textarea, select, details, [tabindex]") || [],
    )

    const toggleMenu = (state: "open" | "closed") => {
      menuTrigger.setAttribute("data-state", state)
      menuClose.setAttribute("data-state", state)
      menu.setAttribute("data-state", state)

      Array.from(
        document.querySelectorAll("button, a, input, textarea, select, details, [tabindex]"),
      )
        .filter((element) => !menuElements.includes(element))
        .forEach((element) => {
          if (element.getAttribute("tabindex") === null) {
            element.setAttribute("tabindex", "-1")
          } else {
            element.removeAttribute("tabindex")
          }
        })

      document.body.classList.toggle("overflow-hidden")
      document.body.classList.toggle("md:overflow-auto")
    }

    menuTrigger.addEventListener("click", () => {
      toggleMenu("open")
      setTimeout(() => menuClose.focus(), 100)
    })
    menuClose.addEventListener("click", () => {
      toggleMenu("closed")
      menuTrigger.focus()
    })
    menuAnchors.forEach((anchor) => anchor.addEventListener("click", () => toggleMenu("closed")))
  })
</script>
